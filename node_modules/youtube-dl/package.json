{
  "name": "youtube-dl",
  "description": "youtube-dl driver for node",
  "keywords": [
    "youtube",
    "video",
    "download"
  ],
  "version": "1.2.7",
  "repository": {
    "type": "git",
    "url": "git://github.com/fent/node-youtube-dl.git"
  },
  "author": {
    "name": "Roly Fentanes",
    "url": "https://github.com/fent"
  },
  "main": "./lib/youtube-dl.js",
  "bin": {
    "youtube-dl": "./bin/youtube-dl"
  },
  "directories": {
    "lib": "./lib"
  },
  "scripts": {
    "install": "node ./scripts/download.js",
    "update": "node ./scripts/download.js",
    "test": "vows ./test/*.js --spec"
  },
  "dependencies": {
    "event-stream": "~2.1.8"
  },
  "devDependencies": {
    "vows": "0.5.x"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/fent/node-youtube-dl/raw/master/LICENSE"
    }
  ],
  "readme": "# youtube-dl [![Build Status](https://secure.travis-ci.org/fent/node-youtube-dl.png)](http://travis-ci.org/fent/node-youtube-dl)\n\nDownload videos from youtube in node.js using [youtube-dl](http://rg3.github.com/youtube-dl/).\n\nI also made a [pure Javascript youtube downloading module](https://github.com/fent/node-ytdl). The reason I'm maintaining this one is because it supports a lot more video sites besides youtube. But if you're only interested in downloading from youtube, you should consider using the better module. It's better in that it doesn't have to spawn a child process, so it uses less memory and it's faster. And you get direct access to the download stream, meaning you can pipe it or pause it or whatever with it.\n\n# Usage\n\n## Downloading videos\n\n```javascript\nvar youtubedl = require('youtube-dl');\nvar dl = youtubedl.download('http://www.youtube.com/watch?v=90AiXO1pAiA',\n  './videos',\n  // optional arguments passed to youtube-dl\n  ['--max-quality=18']);\n\n// will be called when the download starts\ndl.on('download', function(data) {\n  console.log('Download started');\n  console.log('filename: ' + data.filename);\n  console.log('size: ' + data.size);\n});\n\n// will be called during download progress of a video\ndl.on('progress', function(data) {\n  process.stdout.write(data.eta + ' ' + data.percent + '% at ' + data.speed + '\\r');\n});\n\n// catches any errors\ndl.on('error', function(err) {\n  throw err;\n});\n\n// called when youtube-dl finishes\ndl.on('end', function(data) {\n  console.log('\\nDownload finished!');\n  console.log('Filename: ' + data.filename);\n  console.log('Size: ' + data.size);\n  console.log('Time Taken: ' + data.timeTaken);\n  console.log('Time Taken in ms: ' + data.timeTakenms);\n  console.log('Average Speed: ' + data.averageSpeed);\n  console.log('Average Speed in Bytes: ' + data.averageSpeedBytes);\n});\n```\n\n\nThis example can be found in the *example* folder, and will produce an output that looks like the following when ran.\n\n    Download started\n    Video size: 918.31k\n    00:00 100.0% at 206.12k/s\n    Download finished!\n    Filename: 90AiXO1pAiA.mp4\n    Size: 918.31k\n    Time Taken: 7 seconds, 27 ms\n    Time Taken in ms: 7027\n    Average Speed: 333.74KB/s\n    Average Speed in Bytes: 341750.78\n\n\n## Getting video information\n\n```javascript\nvar youtubedl = require('youtube-dl');\nyoutubedl.info('http://www.youtube.com/watch?v=WKsjaOqDXgg',\n  \n  // called when video page is downloaded and info extracted\n  function(err, info) {\n    if (err)\n      throw err;\n    console.log('title: ' + info.title);\n    console.log('url: ' + info.url);\n    console.log('thumbnail: ' + info.thumbnail);\n    console.log('description: ' + info.description);\n    console.log('filename: ' + info.filename);\n  }\n  \n  // optional arguments passed to youtube-dl\n  // ['--username=user', '--password=hunter2']\n  );\n```\n\nRunning that will produce something like\n\n    title: Ace Rimmer to the Rescue\n    url: http://v2.lscache2.c.youtube.com/videoplayback?sparams=id%2Cexpire%2Cip%2Cipbits%2Citag%2Calgorithm%2Cburst%2Cfactor%2Coc%3AU0hPSFFQVF9FSkNOOV9JSlhJ&fexp=904410%2C907048%2C910100&algorithm=throttle-factor&itag=34&ipbits=0&burst=40&sver=3&signature=4093330AC1A5B0CAF8709A0416A4B593A75BB892.21F2F12C418003492D9877E1570DC7AEE6DBEEBA&expire=1303156800&key=yt1&ip=0.0.0.0&factor=1.25&id=58ab2368ea835e08\n    thumbnail: http://i4.ytimg.com/vi/WKsjaOqDXgg/default.jpg\n    description: An old Red Dwarf eposide where Ace Rimmer saves the Princess Bonjella.\n    filename: WKsjaOqDXgg.webm\n\n\nFor more usage info on youtube-dl and the arguments you can pass to it, do `youtube-dl -h` or go to the [youtube-dl documentation][].\n\n\n# Install\n\n    npm install youtube-dl\n\nUse the -g option if you want npm to add a symlink to [youtube-dl][] so it can be used in command line.\n\n\n# Tests\n\nTests are written with [vows](http://vowsjs.org/)\n\n```bash\nnpm test\n```\n\n\n# Issues and the Future\n\nI haven't tested this with playlists yet because I haven't needed to use them. But my guess is they probably work with the download function but not the info function.\n\n\n[youtube-dl]: http://rg3.github.com/youtube-dl/\n[youtube-dl documentation]: http://rg3.github.com/youtube-dl/documentation.html\n\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "youtube-dl@1.2.7",
  "_from": "youtube-dl@"
}
